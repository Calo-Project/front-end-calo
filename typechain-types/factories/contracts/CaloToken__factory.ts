/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { CaloToken, CaloTokenInterface } from "../../contracts/CaloToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "caloevent",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTickets",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "date",
        type: "string",
      },
      {
        internalType: "string",
        name: "time",
        type: "string",
      },
      {
        internalType: "string",
        name: "location",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getCaloEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "cost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTickets",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "date",
            type: "string",
          },
          {
            internalType: "string",
            name: "time",
            type: "string",
          },
          {
            internalType: "string",
            name: "location",
            type: "string",
          },
        ],
        internalType: "struct CaloToken.CaloEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxTickets",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_date",
        type: "string",
      },
      {
        internalType: "string",
        name: "_time",
        type: "string",
      },
      {
        internalType: "string",
        name: "_location",
        type: "string",
      },
    ],
    name: "list",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCaloEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620030683803806200306883398181016040528101906200003791906200023b565b818181600090816200004a91906200050b565b5080600190816200005c91906200050b565b50505033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620005f2565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200011182620000c6565b810181811067ffffffffffffffff82111715620001335762000132620000d7565b5b80604052505050565b600062000148620000a8565b905062000156828262000106565b919050565b600067ffffffffffffffff821115620001795762000178620000d7565b5b6200018482620000c6565b9050602081019050919050565b60005b83811015620001b157808201518184015260208101905062000194565b60008484015250505050565b6000620001d4620001ce846200015b565b6200013c565b905082815260208101848484011115620001f357620001f2620000c1565b5b6200020084828562000191565b509392505050565b600082601f83011262000220576200021f620000bc565b5b815162000232848260208601620001bd565b91505092915050565b60008060408385031215620002555762000254620000b2565b5b600083015167ffffffffffffffff811115620002765762000275620000b7565b5b620002848582860162000208565b925050602083015167ffffffffffffffff811115620002a857620002a7620000b7565b5b620002b68582860162000208565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031357607f821691505b602082108103620003295762000328620002cb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000354565b6200039f868362000354565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ec620003e6620003e084620003b7565b620003c1565b620003b7565b9050919050565b6000819050919050565b6200040883620003cb565b620004206200041782620003f3565b84845462000361565b825550505050565b600090565b6200043762000428565b62000444818484620003fd565b505050565b5b818110156200046c57620004606000826200042d565b6001810190506200044a565b5050565b601f821115620004bb5762000485816200032f565b620004908462000344565b81016020851015620004a0578190505b620004b8620004af8562000344565b83018262000449565b50505b505050565b600082821c905092915050565b6000620004e060001984600802620004c0565b1980831691505092915050565b6000620004fb8383620004cd565b9150826002028217905092915050565b6200051682620002c0565b67ffffffffffffffff811115620005325762000531620000d7565b5b6200053e8254620002fa565b6200054b82828562000470565b600060209050601f8311600181146200058357600084156200056e578287015190505b6200057a8582620004ed565b865550620005ea565b601f19841662000593866200032f565b60005b82811015620005bd5784890151825560018201915060208501945060208101905062000596565b86831015620005dd5784890151620005d9601f891682620004cd565b8355505b6001600288020188555050505b505050505050565b612a6680620006026000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a25780639cf0b5f5116100715780639cf0b5f5146102f3578063a22cb46514610329578063b88d4fde14610345578063c87b56dd14610361578063e985e9c51461039157610116565b80638da5cb5b1461026b57806395d89b411461028957806399035674146102a75780639a382f0f146102d757610116565b806323b872dd116100e957806323b872dd146101b557806342842e0e146101d15780636352211e146101ed57806370a082311461021d5780638010265b1461024d57610116565b806301ffc9a71461011b57806306fdde031461014b578063081812fc14610169578063095ea7b314610199575b600080fd5b61013560048036038101906101309190611c66565b6103c1565b6040516101429190611cae565b60405180910390f35b6101536104a3565b6040516101609190611d59565b60405180910390f35b610183600480360381019061017e9190611db1565b610535565b6040516101909190611e1f565b60405180910390f35b6101b360048036038101906101ae9190611e66565b610551565b005b6101cf60048036038101906101ca9190611ea6565b610567565b005b6101eb60048036038101906101e69190611ea6565b610669565b005b61020760048036038101906102029190611db1565b610689565b6040516102149190611e1f565b60405180910390f35b61023760048036038101906102329190611ef9565b61069b565b6040516102449190611f35565b60405180910390f35b610255610755565b6040516102629190611f35565b60405180910390f35b61027361075b565b6040516102809190611e1f565b60405180910390f35b610291610781565b60405161029e9190611d59565b60405180910390f35b6102c160048036038101906102bc9190611db1565b610813565b6040516102ce919061205a565b60405180910390f35b6102f160048036038101906102ec91906121b1565b610aa6565b005b61030d60048036038101906103089190611db1565b610be3565b60405161032097969594939291906122ae565b60405180910390f35b610343600480360381019061033e9190612365565b610e45565b005b61035f600480360381019061035a9190612446565b610e5b565b005b61037b60048036038101906103769190611db1565b610e78565b6040516103889190611d59565b60405180910390f35b6103ab60048036038101906103a691906124c9565b610ee1565b6040516103b89190611cae565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061049c575061049b82610f75565b5b9050919050565b6060600080546104b290612538565b80601f01602080910402602001604051908101604052809291908181526020018280546104de90612538565b801561052b5780601f106105005761010080835404028352916020019161052b565b820191906000526020600020905b81548152906001019060200180831161050e57829003601f168201915b5050505050905090565b600061054082610fdf565b5061054a82611067565b9050919050565b610563828261055e6110a4565b6110ac565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105d95760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105d09190611e1f565b60405180910390fd5b60006105ed83836105e86110a4565b6110be565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610663578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161065a93929190612569565b60405180910390fd5b50505050565b61068483838360405180602001604052806000815250610e5b565b505050565b600061069482610fdf565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361070e5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107059190611e1f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60075481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805461079090612538565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90612538565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b5050505050905090565b61081b611bbd565b600860008381526020019081526020016000206040518060e00160405290816000820154815260200160018201805461085390612538565b80601f016020809104026020016040519081016040528092919081815260200182805461087f90612538565b80156108cc5780601f106108a1576101008083540402835291602001916108cc565b820191906000526020600020905b8154815290600101906020018083116108af57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820180546108f990612538565b80601f016020809104026020016040519081016040528092919081815260200182805461092590612538565b80156109725780601f1061094757610100808354040283529160200191610972565b820191906000526020600020905b81548152906001019060200180831161095557829003601f168201915b5050505050815260200160058201805461098b90612538565b80601f01602080910402602001604051908101604052809291908181526020018280546109b790612538565b8015610a045780601f106109d957610100808354040283529160200191610a04565b820191906000526020600020905b8154815290600101906020018083116109e757829003601f168201915b50505050508152602001600682018054610a1d90612538565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4990612538565b8015610a965780601f10610a6b57610100808354040283529160200191610a96565b820191906000526020600020905b815481529060010190602001808311610a7957829003601f168201915b5050505050815250509050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0057600080fd5b60076000815480929190610b13906125cf565b91905055506040518060e00160405280600754815260200187815260200186815260200185815260200184815260200183815260200182815250600860006007548152602001908152602001600020600082015181600001556020820151816001019081610b8191906127c3565b5060408201518160020155606082015181600301556080820151816004019081610bab91906127c3565b5060a0820151816005019081610bc191906127c3565b5060c0820151816006019081610bd791906127c3565b50905050505050505050565b6008602052806000526040600020600091509050806000015490806001018054610c0c90612538565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3890612538565b8015610c855780601f10610c5a57610100808354040283529160200191610c85565b820191906000526020600020905b815481529060010190602001808311610c6857829003601f168201915b505050505090806002015490806003015490806004018054610ca690612538565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd290612538565b8015610d1f5780601f10610cf457610100808354040283529160200191610d1f565b820191906000526020600020905b815481529060010190602001808311610d0257829003601f168201915b505050505090806005018054610d3490612538565b80601f0160208091040260200160405190810160405280929190818152602001828054610d6090612538565b8015610dad5780601f10610d8257610100808354040283529160200191610dad565b820191906000526020600020905b815481529060010190602001808311610d9057829003601f168201915b505050505090806006018054610dc290612538565b80601f0160208091040260200160405190810160405280929190818152602001828054610dee90612538565b8015610e3b5780601f10610e1057610100808354040283529160200191610e3b565b820191906000526020600020905b815481529060010190602001808311610e1e57829003601f168201915b5050505050905087565b610e57610e506110a4565b83836112d8565b5050565b610e66848484610567565b610e7284848484611447565b50505050565b6060610e8382610fdf565b506000610e8e6115fe565b90506000815111610eae5760405180602001604052806000815250610ed9565b80610eb884611615565b604051602001610ec99291906128d1565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610feb836116e3565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361105e57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016110559190611f35565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b6110b98383836001611720565b505050565b6000806110ca846116e3565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461110c5761110b8184866118e5565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461119d5761114e600085600080611720565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611220576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361134957816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016113409190611e1f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161143a9190611cae565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156115f8578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261148b6110a4565b8685856040518563ffffffff1660e01b81526004016114ad949392919061294a565b6020604051808303816000875af19250505080156114e957506040513d601f19601f820116820180604052508101906114e691906129ab565b60015b61156d573d8060008114611519576040519150601f19603f3d011682016040523d82523d6000602084013e61151e565b606091505b50600081510361156557836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161155c9190611e1f565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146115f657836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115ed9190611e1f565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001611624846119a9565b01905060008167ffffffffffffffff81111561164357611642612086565b5b6040519080825280601f01601f1916602001820160405280156116755781602001600182028036833780820191505090505b509050600082602001820190505b6001156116d8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816116cc576116cb6129d8565b5b04945060008503611683575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806117595750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561188d57600061176984610fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117d457508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117e757506117e58184610ee1565b155b1561182957826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016118209190611e1f565b60405180910390fd5b811561188b57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118f0838383611afc565b6119a457600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361196557806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161195c9190611f35565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161199b929190612a07565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611a07577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119fd576119fc6129d8565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a44576d04ee2d6d415b85acef81000000008381611a3a57611a396129d8565b5b0492506020810190505b662386f26fc100008310611a7357662386f26fc100008381611a6957611a686129d8565b5b0492506010810190505b6305f5e1008310611a9c576305f5e1008381611a9257611a916129d8565b5b0492506008810190505b6127108310611ac1576127108381611ab757611ab66129d8565b5b0492506004810190505b60648310611ae45760648381611ada57611ad96129d8565b5b0492506002810190505b600a8310611af3576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611bb457508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b755750611b748484610ee1565b5b80611bb357508273ffffffffffffffffffffffffffffffffffffffff16611b9b83611067565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6040518060e00160405280600081526020016060815260200160008152602001600081526020016060815260200160608152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c4381611c0e565b8114611c4e57600080fd5b50565b600081359050611c6081611c3a565b92915050565b600060208284031215611c7c57611c7b611c04565b5b6000611c8a84828501611c51565b91505092915050565b60008115159050919050565b611ca881611c93565b82525050565b6000602082019050611cc36000830184611c9f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d03578082015181840152602081019050611ce8565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d2b82611cc9565b611d358185611cd4565b9350611d45818560208601611ce5565b611d4e81611d0f565b840191505092915050565b60006020820190508181036000830152611d738184611d20565b905092915050565b6000819050919050565b611d8e81611d7b565b8114611d9957600080fd5b50565b600081359050611dab81611d85565b92915050565b600060208284031215611dc757611dc6611c04565b5b6000611dd584828501611d9c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e0982611dde565b9050919050565b611e1981611dfe565b82525050565b6000602082019050611e346000830184611e10565b92915050565b611e4381611dfe565b8114611e4e57600080fd5b50565b600081359050611e6081611e3a565b92915050565b60008060408385031215611e7d57611e7c611c04565b5b6000611e8b85828601611e51565b9250506020611e9c85828601611d9c565b9150509250929050565b600080600060608486031215611ebf57611ebe611c04565b5b6000611ecd86828701611e51565b9350506020611ede86828701611e51565b9250506040611eef86828701611d9c565b9150509250925092565b600060208284031215611f0f57611f0e611c04565b5b6000611f1d84828501611e51565b91505092915050565b611f2f81611d7b565b82525050565b6000602082019050611f4a6000830184611f26565b92915050565b611f5981611d7b565b82525050565b600082825260208201905092915050565b6000611f7b82611cc9565b611f858185611f5f565b9350611f95818560208601611ce5565b611f9e81611d0f565b840191505092915050565b600060e083016000830151611fc16000860182611f50565b5060208301518482036020860152611fd98282611f70565b9150506040830151611fee6040860182611f50565b5060608301516120016060860182611f50565b50608083015184820360808601526120198282611f70565b91505060a083015184820360a08601526120338282611f70565b91505060c083015184820360c086015261204d8282611f70565b9150508091505092915050565b600060208201905081810360008301526120748184611fa9565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120be82611d0f565b810181811067ffffffffffffffff821117156120dd576120dc612086565b5b80604052505050565b60006120f0611bfa565b90506120fc82826120b5565b919050565b600067ffffffffffffffff82111561211c5761211b612086565b5b61212582611d0f565b9050602081019050919050565b82818337600083830152505050565b600061215461214f84612101565b6120e6565b9050828152602081018484840111156121705761216f612081565b5b61217b848285612132565b509392505050565b600082601f8301126121985761219761207c565b5b81356121a8848260208601612141565b91505092915050565b60008060008060008060c087890312156121ce576121cd611c04565b5b600087013567ffffffffffffffff8111156121ec576121eb611c09565b5b6121f889828a01612183565b965050602061220989828a01611d9c565b955050604061221a89828a01611d9c565b945050606087013567ffffffffffffffff81111561223b5761223a611c09565b5b61224789828a01612183565b935050608087013567ffffffffffffffff81111561226857612267611c09565b5b61227489828a01612183565b92505060a087013567ffffffffffffffff81111561229557612294611c09565b5b6122a189828a01612183565b9150509295509295509295565b600060e0820190506122c3600083018a611f26565b81810360208301526122d58189611d20565b90506122e46040830188611f26565b6122f16060830187611f26565b81810360808301526123038186611d20565b905081810360a08301526123178185611d20565b905081810360c083015261232b8184611d20565b905098975050505050505050565b61234281611c93565b811461234d57600080fd5b50565b60008135905061235f81612339565b92915050565b6000806040838503121561237c5761237b611c04565b5b600061238a85828601611e51565b925050602061239b85828601612350565b9150509250929050565b600067ffffffffffffffff8211156123c0576123bf612086565b5b6123c982611d0f565b9050602081019050919050565b60006123e96123e4846123a5565b6120e6565b90508281526020810184848401111561240557612404612081565b5b612410848285612132565b509392505050565b600082601f83011261242d5761242c61207c565b5b813561243d8482602086016123d6565b91505092915050565b600080600080608085870312156124605761245f611c04565b5b600061246e87828801611e51565b945050602061247f87828801611e51565b935050604061249087828801611d9c565b925050606085013567ffffffffffffffff8111156124b1576124b0611c09565b5b6124bd87828801612418565b91505092959194509250565b600080604083850312156124e0576124df611c04565b5b60006124ee85828601611e51565b92505060206124ff85828601611e51565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061255057607f821691505b60208210810361256357612562612509565b5b50919050565b600060608201905061257e6000830186611e10565b61258b6020830185611f26565b6125986040830184611e10565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006125da82611d7b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361260c5761260b6125a0565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026126797fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261263c565b612683868361263c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006126c06126bb6126b684611d7b565b61269b565b611d7b565b9050919050565b6000819050919050565b6126da836126a5565b6126ee6126e6826126c7565b848454612649565b825550505050565b600090565b6127036126f6565b61270e8184846126d1565b505050565b5b81811015612732576127276000826126fb565b600181019050612714565b5050565b601f8211156127775761274881612617565b6127518461262c565b81016020851015612760578190505b61277461276c8561262c565b830182612713565b50505b505050565b600082821c905092915050565b600061279a6000198460080261277c565b1980831691505092915050565b60006127b38383612789565b9150826002028217905092915050565b6127cc82611cc9565b67ffffffffffffffff8111156127e5576127e4612086565b5b6127ef8254612538565b6127fa828285612736565b600060209050601f83116001811461282d576000841561281b578287015190505b61282585826127a7565b86555061288d565b601f19841661283b86612617565b60005b828110156128635784890151825560018201915060208501945060208101905061283e565b86831015612880578489015161287c601f891682612789565b8355505b6001600288020188555050505b505050505050565b600081905092915050565b60006128ab82611cc9565b6128b58185612895565b93506128c5818560208601611ce5565b80840191505092915050565b60006128dd82856128a0565b91506128e982846128a0565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061291c826128f5565b6129268185612900565b9350612936818560208601611ce5565b61293f81611d0f565b840191505092915050565b600060808201905061295f6000830187611e10565b61296c6020830186611e10565b6129796040830185611f26565b818103606083015261298b8184612911565b905095945050505050565b6000815190506129a581611c3a565b92915050565b6000602082840312156129c1576129c0611c04565b5b60006129cf84828501612996565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050612a1c6000830185611e10565b612a296020830184611f26565b939250505056fea26469706673582212204e6c7defd0ab6268945c59cd35630c5bb5bef71a528e049db2436bfaae6a919b64736f6c63430008140033";

type CaloTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CaloTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CaloToken__factory extends ContractFactory {
  constructor(...args: CaloTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CaloToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<CaloToken>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): CaloToken {
    return super.attach(address) as CaloToken;
  }
  override connect(signer: Signer): CaloToken__factory {
    return super.connect(signer) as CaloToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CaloTokenInterface {
    return new utils.Interface(_abi) as CaloTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CaloToken {
    return new Contract(address, _abi, signerOrProvider) as CaloToken;
  }
}
